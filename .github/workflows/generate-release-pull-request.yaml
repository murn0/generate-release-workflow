name: Generate release pull request
on:
  workflow_call:
    inputs:
      CHANGELOG_HEADER:
        required: true
        type: string
      CHANGELOG:
        required: true
        type: string
      RELEASE_VERSION:
        required: true
        type: string
      REVIEWERS:
        required: false
        type: string
      LABELS:
        required: false
        type: string
    secrets:
      gh_app_id:
        required: true
      gh_app_private_key:
        required: true

permissions: {}

jobs:
  generate-pull-request:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
        with:
          aqua_version: v2.8.0
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{secrets.gh_app_id}}
          private_key: ${{secrets.gh_app_private_key}}
      - name: Set current datetime
        id: datetime
        run: echo "CURRENT_DATETIME=$(date +"%Y-%m-%dT%H:%M:%S%z")" >> $GITHUB_ENV
        env:
          TZ: 'Asia/Tokyo'
      - name: Check and Set pull request label options
        id: set-label
        run: |
          label_names="${{inputs.LABELS}}"
          # カンマで分割して配列に格納
          IFS=',' read -r -a labels <<< "$label_names"

          pr_create_label_options=''
          pr_edit_label_options=''
          for label in "${labels[@]}"; do
              echo "$label"
              # 不要な先頭および末尾の空白を削除しつつ表示
              label_name=$(echo "$label" | awk '{$1=$1};1')
              echo $label_name
              if ! $(gh label list -R "$GITHUB_REPOSITORY" --json name | jq ". | any(.name == \"${label_name}\")"); then
                #=> ラベルが存在しなかった場合にはエラー表示
                echo "::error title=${label_name} is not found::Please create a new label"
              fi
              pr_create_label_options+="--label '${label_name}' "
              pr_edit_label_options+="--add-label '${label_name}' "
          done

          echo $pr_create_label_options
          echo "PR_CREATE_LABEL_OPTIONS=$pr_create_label_options" >> $GITHUB_OUTPUT

          echo $pr_edit_label_options
          echo "PR_EDIT_LABEL_OPTIONS=$pr_edit_label_options" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Set pull request reviewers
        id: set-reviewers
        run: |
          reviewer_names="${{inputs.REVIEWERS}}"
          # カンマで分割して配列に格納
          IFS=',' read -r -a reviewers <<< "$reviewer_names"

          pr_create_reviewer_options=''
          pr_edit_reviewer_options=''
          for reviewer in "${reviewers[@]}"; do
              echo "$reviewer"
              # 不要な先頭および末尾の空白を削除しつつ表示
              reviewer_name=$(echo "$reviewer" | awk '{$1=$1};1')
              echo $reviewer_name
              
              pr_create_reviewer_options+="--reviewer '${reviewer_name}' "
              pr_edit_reviewer_options+="--add-reviewer '${reviewer_name}' "
          done

          echo $pr_create_reviewer_options
          echo "PR_CREATE_REVIEWER_OPTIONS=$pr_create_reviewer_options" >> $GITHUB_OUTPUT

          echo $pr_edit_reviewer_options
          echo "PR_EDIT_REVIEWER_OPTIONS=$pr_edit_reviewer_options" >> $GITHUB_OUTPUT
      - name: Generate pull request
        run: |
          set -eu

          ghcp -v

          SAME_PR_COUNT=$(gh pr list -B $GITHUB_REF_NAME -H release/$RELEASE_VERSION --json 'id' --jq '.[] | length')
          if [[ -z "$SAME_PR_COUNT" ]]; then
            #=> 同じブランチ名のプルリクエストがない場合はプルリクエストを新規作成する
            ghcp empty-commit -r $GITHUB_REPOSITORY -b release/$RELEASE_VERSION -m 'chore: empty commit to open follow up pull request'
            gh pr create -B $GITHUB_REF_NAME -H release/$RELEASE_VERSION --title "$RELEASE_VERSION ${{steps.datetime.outputs.CURRENT_DATETIME}}" --body "$CHANGELOG" --milestone "$RELEASE_VERSION" ${{steps.set-label.outputs.PR_CREATE_LABEL_OPTIONS}} ${{steps.set-reviewers.outputs.PR_CREATE_REVIEWER_OPTIONS}}
          else
            #=> 同じブランチ名のプルリクエストがある場合は該当のプルリクエストを編集する
            SAME_PR_NUMBER=$(gh pr list -B $GITHUB_REF_NAME -H release/$RELEASE_VERSION --json 'number' --jq '.[].number')
            gh pr edit $SAME_PR_NUMBER --title "$RELEASE_VERSION ${{steps.datetime.outputs.CURRENT_DATETIME}}" --body "$CHANGELOG" --milestone "$RELEASE_VERSION" ${{steps.set-label.outputs.PR_EDIT_LABEL_OPTIONS}} ${{steps.set-reviewers.outputs.PR_EDIT_REVIEWER_OPTIONS}}
          fi
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
          CHANGELOG: |-
            ${{inputs.CHANGELOG_HEADER}}
            ---


            ${{inputs.CHANGELOG}}

            ---
            > **Note**
            > This release was published on ${{steps.datetime.outputs.CURRENT_DATETIME}}

            > **Note**
            > Commit SHA is ${{github.sha}}
          RELEASE_VERSION: ${{inputs.RELEASE_VERSION}}