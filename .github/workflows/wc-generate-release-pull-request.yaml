name: Generate release pull request
on:
  workflow_call:
    inputs:
      CHANGELOG_HEADER:
        required: true
        type: string
      CHANGELOG:
        required: true
        type: string
      RELEASE_VERSION:
        required: true
        type: string
      REVIEWERS:
        required: false
        type: string
      LABELS:
        required: false
        type: string
      app_id_url:
        required: false
        type: string
        description: The Secret Reference URL for the AppID stored in 1Password
      app_secret_url:
        required: false
        type: string
        description: The Secret Reference URL for the AppSecret stored in 1Password
    secrets:
      op_service_account_token:
        required: false
      gh_app_id:
        required: false
      gh_app_private_key:
        required: false

permissions: {}

jobs:
  generate-pull-request:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - uses: aquaproj/aqua-installer@7c7338067bdb97d5bea2acc82b5870afca470d18 # v2.3.0
        with:
          aqua_version: v2.24.1
      - name: Load secrets
        uses: 1password/load-secrets-action@971116bbffed9bfe57bd55447317d56fbc7a6a81 # v1.3.2
        if: ${{ inputs.app_id_url != '' && inputs.app_secret_url != '' }}
        id: op-load-secret
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.op_service_account_token }}
          APP_ID: ${{ inputs.app_id_url }}
          APP_SECRET: ${{ inputs.app_secret_url }}
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@32691ba7c9e7063bd457bd8f2a5703138591fa58 # v1.9.0
        with:
          app_id: >-
            ${{
              inputs.app_id_url != '' && steps.op-load-secret.outputs.APP_ID ||
              secrets.gh_app_id
            }}
          private_key: >-
            ${{
              inputs.app_secret_url != '' && steps.op-load-secret.outputs.APP_SECRET ||
              secrets.gh_app_private_key
            }}
      - name: Set current datetime
        id: datetime
        run: echo "CURRENT_DATETIME=$(date +"%Y-%m-%dT%H:%M:%S%z")" >> "$GITHUB_OUTPUT"
        env:
          TZ: 'Asia/Tokyo'
      - name: Check and Set pull request label options
        id: set-label
        run: |
          label_names="${{inputs.LABELS}}"
          # カンマで分割して配列に格納
          IFS=',' read -r -a labels <<< "$label_names"

          pr_create_label_options=()
          pr_edit_label_options=()
          for label in "${labels[@]}"; do
              echo "$label"
              # 不要な先頭および末尾の空白を削除しつつ表示
              label_name=$(echo "$label" | awk '{$1=$1};1')
              echo "$label_name"
              if ! gh label list -R "$GITHUB_REPOSITORY" --json name | jq ". | any(.name == \"${label_name}\")"; then
                #=> ラベルが存在しなかった場合にはエラー表示
                echo "::error title=${label_name} is not found::Please create a new label"
              fi
              pr_create_label_options+=(--label "$label_name")
              pr_edit_label_options+=(--add-label "$label_name")
          done

          echo "${pr_create_label_options[@]}"
          echo "PR_CREATE_LABEL_OPTIONS=${pr_create_label_options[*]}" >> "$GITHUB_OUTPUT"

          echo "${pr_edit_label_options[@]}"
          echo "PR_EDIT_LABEL_OPTIONS=${pr_edit_label_options[*]}" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Set pull request reviewers
        id: set-reviewers
        run: |
          reviewer_names="${{inputs.REVIEWERS}}"
          # カンマで分割して配列に格納
          IFS=',' read -r -a reviewers <<< "$reviewer_names"

          pr_create_reviewer_options=()
          pr_edit_reviewer_options=()
          for reviewer in "${reviewers[@]}"; do
              echo "$reviewer"
              # 不要な先頭および末尾の空白を削除しつつ表示
              reviewer_name=$(echo "$reviewer" | awk '{$1=$1};1')
              echo "$reviewer_name"
              
              pr_create_reviewer_options+=(--reviewer "$reviewer_name")
              pr_edit_reviewer_options+=(--add-reviewer "$reviewer_name")
          done

          echo "${pr_create_reviewer_options[@]}"
          echo "PR_CREATE_REVIEWER_OPTIONS=${pr_create_reviewer_options[*]}" >> "$GITHUB_OUTPUT"

          echo "${pr_edit_reviewer_options[@]}"
          echo "PR_EDIT_REVIEWER_OPTIONS=${pr_edit_reviewer_options[*]}" >> "$GITHUB_OUTPUT"
      - name: Generate pull request
        run: |
          set -eu

          ghcp -v

          SAME_PR_COUNT=$(gh pr list -B "$GITHUB_REF_NAME" -H "release/$RELEASE_VERSION" --json 'id' --jq '.[] | length')
          if [[ -z "$SAME_PR_COUNT" ]]; then
            #=> 同じブランチ名のプルリクエストがない場合はプルリクエストを新規作成する
            ghcp empty-commit \
              -r "$GITHUB_REPOSITORY" \
              -b "release/$RELEASE_VERSION" \
              -m "chore: Open pull request for release $RELEASE_VERSION"
            gh pr create \
              -B "$GITHUB_REF_NAME" \
              -H "release/$RELEASE_VERSION" \
              --title "$RELEASE_VERSION ${{steps.datetime.outputs.CURRENT_DATETIME}}" \
              --body "$CHANGELOG" \
              --milestone "$RELEASE_VERSION" \
              ${{steps.set-label.outputs.PR_CREATE_LABEL_OPTIONS}} \
              ${{steps.set-reviewers.outputs.PR_CREATE_REVIEWER_OPTIONS}}
          else
            #=> 同じブランチ名のプルリクエストがある場合は該当のプルリクエストを編集する
            SAME_PR_NUMBER=$(gh pr list -B "$GITHUB_REF_NAME" -H "release/$RELEASE_VERSION" --json 'number' --jq '.[].number')
            gh pr edit "$SAME_PR_NUMBER" \
              --title "$RELEASE_VERSION ${{steps.datetime.outputs.CURRENT_DATETIME}}" \
              --body "$CHANGELOG" \
              --milestone "$RELEASE_VERSION" \
              ${{steps.set-label.outputs.PR_EDIT_LABEL_OPTIONS}} \
              ${{steps.set-reviewers.outputs.PR_EDIT_REVIEWER_OPTIONS}}
          fi
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
          CHANGELOG: |-
            ${{inputs.CHANGELOG_HEADER}}
            ---


            ${{inputs.CHANGELOG}}

            ---
          RELEASE_VERSION: ${{inputs.RELEASE_VERSION}}